{"version":3,"file":"DeskproAppProvider-1835bfea.js","sources":["../../../node_modules/.pnpm/@deskpro+deskpro-ui@7.1.0_@types+web@0.0.111_react-dom@18.2.0_react@18.2.0_styled-components@5.3.11/node_modules/@deskpro/deskpro-ui/dist/esm/style/theme/ThemeProvider.js","../../../src/ui/context/types.ts","../../../node_modules/.pnpm/penpal@6.2.1/node_modules/penpal/lib/enums.js","../../../node_modules/.pnpm/penpal@6.2.1/node_modules/penpal/lib/createDestructor.js","../../../node_modules/.pnpm/penpal@6.2.1/node_modules/penpal/lib/createLogger.js","../../../node_modules/.pnpm/penpal@6.2.1/node_modules/penpal/lib/errorSerialization.js","../../../node_modules/.pnpm/penpal@6.2.1/node_modules/penpal/lib/connectCallReceiver.js","../../../node_modules/.pnpm/penpal@6.2.1/node_modules/penpal/lib/generateId.js","../../../node_modules/.pnpm/penpal@6.2.1/node_modules/penpal/lib/methodSerialization.js","../../../node_modules/.pnpm/penpal@6.2.1/node_modules/penpal/lib/connectCallSender.js","../../../node_modules/.pnpm/penpal@6.2.1/node_modules/penpal/lib/startConnectionTimeout.js","../../../node_modules/.pnpm/penpal@6.2.1/node_modules/penpal/lib/child/handleSynAckMessageFactory.js","../../../node_modules/.pnpm/penpal@6.2.1/node_modules/penpal/lib/child/connectToParent.js","../../../src/client/client.ts","../../../src/ui/context/context.ts","../../../src/ui/context/DeskproAppProvider.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"styled-components\";\n/**\n * @public\n */\nexport const ThemeProvider = (props) => (React.createElement(ThemeContext.Provider, { value: props.theme }, props.children));\n/**\n * @public\n */\nexport const useTheme = () => useContext(ThemeContext);\n//# sourceMappingURL=ThemeProvider.js.map","import { DeskproTheme } from \"@deskpro/deskpro-ui\";\nimport { AppElement, Context, IDeskproClient, TargetAction } from \"../../client/types\";\nimport { ReactNode } from \"react\";\n\nexport interface DeskproAppProviderProps {\n  children: ReactNode;\n  theme?: DeskproTheme;\n  debug?: boolean,\n}\n\nexport type DeskproAppContextValue = {\n  client: IDeskproClient|null,\n  context: Context|null,\n  theme: DeskproTheme,\n  registeredElements: string[];\n  setRegisteredElements: (value: (((prevState: string[]) => string[]) | string[])) => void;\n} | null;\n\nexport interface DeskproAppClient {\n  client: IDeskproClient|null;\n}\n\nexport interface LatestDeskproAppContext {\n  context: Context|null;\n}\n\nexport interface DeskproAppTheme {\n  theme: DeskproTheme;\n}\n\nexport enum DeskproAppEventType {\n  READY = \"ready.app.deskpro\",\n  SHOW = \"show.app.deskpro\",\n  CHANGE = \"change.app.deskpro\",\n  TARGET_ACTION = \"target_action.app.deskpro\",\n  TARGET_ELEMENT_EVENT = \"target_element_event.app.deskpro\",\n  ADMIN_SETTINGS_CHANGE = \"change.settings.admin.app.deskpro\",\n}\n\nexport interface DeskproAppEventHooks {\n  onReady?: (context: Context) => void;\n  onShow?: (context: Context) => void;\n  onChange?: (context: Context) => void;\n  onTargetAction?: <Payload = any>(action: TargetAction<Payload>) => void;\n  onElementEvent?: <Payload = any>(id: string, type: string, payload?: Payload) => void;\n  onAdminSettingsChange?: (settings: Record<string, any>) => void;\n}\n\nexport type RegisterElement = (id: string, element: AppElement) => void;\n\nexport type DeRegisterElement = (id: string) => void;\n\nexport type ClearElements = () => void;\n","export var MessageType;\n(function (MessageType) {\n    MessageType[\"Call\"] = \"call\";\n    MessageType[\"Reply\"] = \"reply\";\n    MessageType[\"Syn\"] = \"syn\";\n    MessageType[\"SynAck\"] = \"synAck\";\n    MessageType[\"Ack\"] = \"ack\";\n})(MessageType || (MessageType = {}));\nexport var Resolution;\n(function (Resolution) {\n    Resolution[\"Fulfilled\"] = \"fulfilled\";\n    Resolution[\"Rejected\"] = \"rejected\";\n})(Resolution || (Resolution = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"ConnectionDestroyed\"] = \"ConnectionDestroyed\";\n    ErrorCode[\"ConnectionTimeout\"] = \"ConnectionTimeout\";\n    ErrorCode[\"NoIframeSrc\"] = \"NoIframeSrc\";\n})(ErrorCode || (ErrorCode = {}));\nexport var NativeErrorName;\n(function (NativeErrorName) {\n    NativeErrorName[\"DataCloneError\"] = \"DataCloneError\";\n})(NativeErrorName || (NativeErrorName = {}));\nexport var NativeEventType;\n(function (NativeEventType) {\n    NativeEventType[\"Message\"] = \"message\";\n})(NativeEventType || (NativeEventType = {}));\n","export default (localName, log) => {\n    const callbacks = [];\n    let destroyed = false;\n    return {\n        destroy(error) {\n            if (!destroyed) {\n                destroyed = true;\n                log(`${localName}: Destroying connection`);\n                callbacks.forEach((callback) => {\n                    callback(error);\n                });\n            }\n        },\n        onDestroy(callback) {\n            destroyed ? callback() : callbacks.push(callback);\n        },\n    };\n};\n","export default (debug) => {\n    /**\n     * Logs a message if debug is enabled.\n     */\n    return (...args) => {\n        if (debug) {\n            console.log('[Penpal]', ...args); // eslint-disable-line no-console\n        }\n    };\n};\n","/**\n * Converts an error object into a plain object.\n */\nexport const serializeError = ({ name, message, stack, }) => ({\n    name,\n    message,\n    stack,\n});\n/**\n * Converts a plain object into an error object.\n */\nexport const deserializeError = (obj) => {\n    const deserializedError = new Error();\n    // @ts-ignore\n    Object.keys(obj).forEach((key) => (deserializedError[key] = obj[key]));\n    return deserializedError;\n};\n","import { serializeError } from './errorSerialization';\nimport { MessageType, NativeEventType, NativeErrorName, Resolution, } from './enums';\n/**\n * Listens for \"call\" messages coming from the remote, executes the corresponding method, and\n * responds with the return value.\n */\nexport default (info, serializedMethods, log) => {\n    const { localName, local, remote, originForSending, originForReceiving, } = info;\n    let destroyed = false;\n    const handleMessageEvent = (event) => {\n        if (event.source !== remote || event.data.penpal !== MessageType.Call) {\n            return;\n        }\n        if (originForReceiving !== '*' && event.origin !== originForReceiving) {\n            log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n            return;\n        }\n        const callMessage = event.data;\n        const { methodName, args, id } = callMessage;\n        log(`${localName}: Received ${methodName}() call`);\n        const createPromiseHandler = (resolution) => {\n            return (returnValue) => {\n                log(`${localName}: Sending ${methodName}() reply`);\n                if (destroyed) {\n                    // It's possible to throw an error here, but it would need to be thrown asynchronously\n                    // and would only be catchable using window.onerror. This is because the consumer\n                    // is merely returning a value from their method and not calling any function\n                    // that they could wrap in a try-catch. Even if the consumer were to catch the error,\n                    // the value of doing so is questionable. Instead, we'll just log a message.\n                    log(`${localName}: Unable to send ${methodName}() reply due to destroyed connection`);\n                    return;\n                }\n                const message = {\n                    penpal: MessageType.Reply,\n                    id,\n                    resolution,\n                    returnValue,\n                };\n                if (resolution === Resolution.Rejected &&\n                    returnValue instanceof Error) {\n                    message.returnValue = serializeError(returnValue);\n                    message.returnValueIsError = true;\n                }\n                try {\n                    remote.postMessage(message, originForSending);\n                }\n                catch (err) {\n                    // If a consumer attempts to send an object that's not cloneable (e.g., window),\n                    // we want to ensure the receiver's promise gets rejected.\n                    if (err.name === NativeErrorName.DataCloneError) {\n                        const errorReplyMessage = {\n                            penpal: MessageType.Reply,\n                            id,\n                            resolution: Resolution.Rejected,\n                            returnValue: serializeError(err),\n                            returnValueIsError: true,\n                        };\n                        remote.postMessage(errorReplyMessage, originForSending);\n                    }\n                    throw err;\n                }\n            };\n        };\n        new Promise((resolve) => resolve(serializedMethods[methodName].apply(serializedMethods, args))).then(createPromiseHandler(Resolution.Fulfilled), createPromiseHandler(Resolution.Rejected));\n    };\n    local.addEventListener(NativeEventType.Message, handleMessageEvent);\n    return () => {\n        destroyed = true;\n        local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n    };\n};\n","let id = 0;\n/**\n * @return {number} A unique ID (not universally unique)\n */\nexport default () => ++id;\n","const KEY_PATH_DELIMITER = '.';\nconst keyPathToSegments = (keyPath) => keyPath ? keyPath.split(KEY_PATH_DELIMITER) : [];\nconst segmentsToKeyPath = (segments) => segments.join(KEY_PATH_DELIMITER);\nconst createKeyPath = (key, prefix) => {\n    const segments = keyPathToSegments(prefix || '');\n    segments.push(key);\n    return segmentsToKeyPath(segments);\n};\n/**\n * Given a `keyPath`, set it to be `value` on `subject`, creating any intermediate\n * objects along the way.\n *\n * @param {Object} subject The object on which to set value.\n * @param {string} keyPath The key path at which to set value.\n * @param {Object} value The value to store at the given key path.\n * @returns {Object} Updated subject.\n */\nexport const setAtKeyPath = (subject, keyPath, value) => {\n    const segments = keyPathToSegments(keyPath);\n    segments.reduce((prevSubject, key, idx) => {\n        if (typeof prevSubject[key] === 'undefined') {\n            prevSubject[key] = {};\n        }\n        if (idx === segments.length - 1) {\n            prevSubject[key] = value;\n        }\n        return prevSubject[key];\n    }, subject);\n    return subject;\n};\n/**\n * Given a dictionary of (nested) keys to function, flatten them to a map\n * from key path to function.\n *\n * @param {Object} methods The (potentially nested) object to serialize.\n * @param {string} prefix A string with which to prefix entries. Typically not intended to be used by consumers.\n * @returns {Object} An map from key path in `methods` to functions.\n */\nexport const serializeMethods = (methods, prefix) => {\n    const flattenedMethods = {};\n    Object.keys(methods).forEach((key) => {\n        const value = methods[key];\n        const keyPath = createKeyPath(key, prefix);\n        if (typeof value === 'object') {\n            // Recurse into any nested children.\n            Object.assign(flattenedMethods, serializeMethods(value, keyPath));\n        }\n        if (typeof value === 'function') {\n            // If we've found a method, expose it.\n            flattenedMethods[keyPath] = value;\n        }\n    });\n    return flattenedMethods;\n};\n/**\n * Given a map of key paths to functions, unpack the key paths to an object.\n *\n * @param {Object} flattenedMethods A map of key paths to functions to unpack.\n * @returns {Object} A (potentially nested) map of functions.\n */\nexport const deserializeMethods = (flattenedMethods) => {\n    const methods = {};\n    for (const keyPath in flattenedMethods) {\n        setAtKeyPath(methods, keyPath, flattenedMethods[keyPath]);\n    }\n    return methods;\n};\n","import generateId from './generateId';\nimport { deserializeError } from './errorSerialization';\nimport { deserializeMethods } from './methodSerialization';\nimport { ErrorCode, MessageType, NativeEventType, Resolution } from './enums';\n/**\n * Augments an object with methods that match those defined by the remote. When these methods are\n * called, a \"call\" message will be sent to the remote, the remote's corresponding method will be\n * executed, and the method's return value will be returned via a message.\n * @param {Object} callSender Sender object that should be augmented with methods.\n * @param {Object} info Information about the local and remote windows.\n * @param {Array} methodKeyPaths Key paths of methods available to be called on the remote.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Object} The call sender object with methods that may be called.\n */\nexport default (callSender, info, methodKeyPaths, destroyConnection, log) => {\n    const { localName, local, remote, originForSending, originForReceiving, } = info;\n    let destroyed = false;\n    log(`${localName}: Connecting call sender`);\n    const createMethodProxy = (methodName) => {\n        return (...args) => {\n            log(`${localName}: Sending ${methodName}() call`);\n            // This handles the case where the iframe has been removed from the DOM\n            // (and therefore its window closed), the consumer has not yet\n            // called destroy(), and the user calls a method exposed by\n            // the remote. We detect the iframe has been removed and force\n            // a destroy() immediately so that the consumer sees the error saying\n            // the connection has been destroyed. We wrap this check in a try catch\n            // because Edge throws an \"Object expected\" error when accessing\n            // contentWindow.closed on a contentWindow from an iframe that's been\n            // removed from the DOM.\n            let iframeRemoved;\n            try {\n                if (remote.closed) {\n                    iframeRemoved = true;\n                }\n            }\n            catch (e) {\n                iframeRemoved = true;\n            }\n            if (iframeRemoved) {\n                destroyConnection();\n            }\n            if (destroyed) {\n                const error = new Error(`Unable to send ${methodName}() call due ` + `to destroyed connection`);\n                error.code = ErrorCode.ConnectionDestroyed;\n                throw error;\n            }\n            return new Promise((resolve, reject) => {\n                const id = generateId();\n                const handleMessageEvent = (event) => {\n                    if (event.source !== remote ||\n                        event.data.penpal !== MessageType.Reply ||\n                        event.data.id !== id) {\n                        return;\n                    }\n                    if (originForReceiving !== '*' &&\n                        event.origin !== originForReceiving) {\n                        log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n                        return;\n                    }\n                    const replyMessage = event.data;\n                    log(`${localName}: Received ${methodName}() reply`);\n                    local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n                    let returnValue = replyMessage.returnValue;\n                    if (replyMessage.returnValueIsError) {\n                        returnValue = deserializeError(returnValue);\n                    }\n                    (replyMessage.resolution === Resolution.Fulfilled ? resolve : reject)(returnValue);\n                };\n                local.addEventListener(NativeEventType.Message, handleMessageEvent);\n                const callMessage = {\n                    penpal: MessageType.Call,\n                    id,\n                    methodName,\n                    args,\n                };\n                remote.postMessage(callMessage, originForSending);\n            });\n        };\n    };\n    // Wrap each method in a proxy which sends it to the corresponding receiver.\n    const flattenedMethods = methodKeyPaths.reduce((api, name) => {\n        api[name] = createMethodProxy(name);\n        return api;\n    }, {});\n    // Unpack the structure of the provided methods object onto the CallSender, exposing\n    // the methods in the same shape they were provided.\n    Object.assign(callSender, deserializeMethods(flattenedMethods));\n    return () => {\n        destroyed = true;\n    };\n};\n","import { ErrorCode } from './enums';\n/**\n * Starts a timeout and calls the callback with an error\n * if the timeout completes before the stop function is called.\n */\nexport default (timeout, callback) => {\n    let timeoutId;\n    if (timeout !== undefined) {\n        timeoutId = window.setTimeout(() => {\n            const error = new Error(`Connection timed out after ${timeout}ms`);\n            error.code = ErrorCode.ConnectionTimeout;\n            callback(error);\n        }, timeout);\n    }\n    return () => {\n        clearTimeout(timeoutId);\n    };\n};\n","import { MessageType } from '../enums';\nimport connectCallReceiver from '../connectCallReceiver';\nimport connectCallSender from '../connectCallSender';\n/**\n * Handles a SYN-ACK handshake message.\n */\nexport default (parentOrigin, serializedMethods, destructor, log) => {\n    const { destroy, onDestroy } = destructor;\n    return (event) => {\n        let originQualifies = parentOrigin instanceof RegExp\n            ? parentOrigin.test(event.origin)\n            : parentOrigin === '*' || parentOrigin === event.origin;\n        if (!originQualifies) {\n            log(`Child: Handshake - Received SYN-ACK from origin ${event.origin} which did not match expected origin ${parentOrigin}`);\n            return;\n        }\n        log('Child: Handshake - Received SYN-ACK, responding with ACK');\n        // If event.origin is \"null\", the remote protocol is file: or data: and we\n        // must post messages with \"*\" as targetOrigin when sending messages.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage#Using_window.postMessage_in_extensions\n        const originForSending = event.origin === 'null' ? '*' : event.origin;\n        const ackMessage = {\n            penpal: MessageType.Ack,\n            methodNames: Object.keys(serializedMethods),\n        };\n        window.parent.postMessage(ackMessage, originForSending);\n        const info = {\n            localName: 'Child',\n            local: window,\n            remote: window.parent,\n            originForSending,\n            originForReceiving: event.origin,\n        };\n        const destroyCallReceiver = connectCallReceiver(info, serializedMethods, log);\n        onDestroy(destroyCallReceiver);\n        const callSender = {};\n        const destroyCallSender = connectCallSender(callSender, info, event.data.methodNames, destroy, log);\n        onDestroy(destroyCallSender);\n        return callSender;\n    };\n};\n","import createDestructor from '../createDestructor';\nimport createLogger from '../createLogger';\nimport { MessageType, NativeEventType } from '../enums';\nimport handleSynAckMessageFactory from './handleSynAckMessageFactory';\nimport { serializeMethods } from '../methodSerialization';\nimport startConnectionTimeout from '../startConnectionTimeout';\nconst areGlobalsAccessible = () => {\n    try {\n        clearTimeout();\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n};\n/**\n * Attempts to establish communication with the parent window.\n */\nexport default (options = {}) => {\n    const { parentOrigin = '*', methods = {}, timeout, debug = false } = options;\n    const log = createLogger(debug);\n    const destructor = createDestructor('Child', log);\n    const { destroy, onDestroy } = destructor;\n    const serializedMethods = serializeMethods(methods);\n    const handleSynAckMessage = handleSynAckMessageFactory(parentOrigin, serializedMethods, destructor, log);\n    const sendSynMessage = () => {\n        log('Child: Handshake - Sending SYN');\n        const synMessage = { penpal: MessageType.Syn };\n        const parentOriginForSyn = parentOrigin instanceof RegExp ? '*' : parentOrigin;\n        window.parent.postMessage(synMessage, parentOriginForSyn);\n    };\n    const promise = new Promise((resolve, reject) => {\n        const stopConnectionTimeout = startConnectionTimeout(timeout, destroy);\n        const handleMessage = (event) => {\n            // Under niche scenarios, we get into this function after\n            // the iframe has been removed from the DOM. In Edge, this\n            // results in \"Object expected\" errors being thrown when we\n            // try to access properties on window (global properties).\n            // For this reason, we try to access a global up front (clearTimeout)\n            // and if it fails we can assume the iframe has been removed\n            // and we ignore the message event.\n            if (!areGlobalsAccessible()) {\n                return;\n            }\n            if (event.source !== parent || !event.data) {\n                return;\n            }\n            if (event.data.penpal === MessageType.SynAck) {\n                const callSender = handleSynAckMessage(event);\n                if (callSender) {\n                    window.removeEventListener(NativeEventType.Message, handleMessage);\n                    stopConnectionTimeout();\n                    resolve(callSender);\n                }\n            }\n        };\n        window.addEventListener(NativeEventType.Message, handleMessage);\n        sendSynMessage();\n        onDestroy((error) => {\n            window.removeEventListener(NativeEventType.Message, handleMessage);\n            if (error) {\n                reject(error);\n            }\n        });\n    });\n    return {\n        promise,\n        destroy() {\n            // Don't allow consumer to pass an error into destroy.\n            destroy();\n        },\n    };\n};\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { connectToParent, Connection } from \"penpal\";\nimport {\n  IDeskproClient,\n  ChildMethod,\n  ChildMethods,\n  ProxyAuthPayload,\n  DeskproCallSender,\n  Context,\n  DeskproClientOptions,\n  TargetActionChildMethod,\n  TargetAction,\n  IEntityAssociation,\n  AppElement,\n  ElementEventChildMethod,\n  StateOptions,\n  SetStateResponse,\n  UserStateOptions,\n  GetStateResponse,\n  TargetActionType,\n  TargetActionOptions,\n  IOAuth2,\n  OAuth2CallbackUrlOptions,\n  OAuth2CallbackUrl,\n  GetOAuth2CallbackUrlResponse,\n  OAuth2CallbackUrlPoll,\n  GetStaticOAuth2CallbackUrlResponse,\n  OAuth2StaticCallbackUrlPoll,\n  OAuth2StaticCallbackUrl,\n  IDeskproUI,\n  DeskproUIMessage,\n} from \"./types\";\nimport { CallSender } from \"penpal/lib/types\";\n\nclass DeskproUI implements IDeskproUI {\n  constructor(\n      private client: IDeskproClient,\n  ) {}\n\n  send(message: DeskproUIMessage): Promise<void> {\n    return this.client.sendDeskproUIMessage(message);\n  }\n\n  appendContentToActiveTicketReplyBox(content: string): Promise<void> {\n    return this.send({\n      type: \"append_to_active_ticket_reply_box\",\n      content,\n    });\n  }\n\n  appendLinkToActiveTicketReplyBox(url: string, text: string, title?: string): Promise<void> {\n    return this.send({\n      type: \"append_link_to_active_ticket_reply_box\",\n      url,\n      text,\n      title,\n    });\n  }\n}\n\nclass EntityAssociation implements IEntityAssociation {\n  constructor(\n    private client: IDeskproClient,\n    private name: string,\n    private entityId: string\n  ) {}\n\n  async get<T>(key: string): Promise<T|null> {\n    const value = await this.client.entityAssociationGet(this.entityId, this.name, key);\n    return value ? JSON.parse(value) : null;\n  }\n\n  list(): Promise<string[]> {\n    return this.client.entityAssociationList(this.entityId, this.name);\n  }\n\n  set<T>(key: string, value?: T): Promise<void> {\n    return this.client.entityAssociationSet(this.entityId, this.name, key, value ? JSON.stringify(value) : undefined);\n  }\n\n  delete(key: string): Promise<void> {\n    return this.client.entityAssociationDelete(this.entityId, this.name, key);\n  }\n}\n\nclass OAuth2 implements IOAuth2 {\n  constructor(private client: IDeskproClient) {}\n\n  async getCallbackUrl(\n      name: string,\n      tokenAcquisitionPattern: RegExp,\n      options?: OAuth2CallbackUrlOptions\n  ): Promise<OAuth2CallbackUrl> {\n    const timeout = options?.timeout ?? (300 * 1000); // 5 minute timeout\n    const pollInterval = options?.pollInterval ?? 1000; // 1 second poll interval\n\n    const urlResponse = await this.client.getOAuth2CallbackUrl(name, tokenAcquisitionPattern.source, timeout, options?.expires);\n\n    const poll: OAuth2CallbackUrlPoll = () => new Promise((resolve, reject) => {\n      const poller = setInterval(() => {\n        this.client.hasUserState(urlResponse.statePath).then((has) => {\n          if (has) {\n            clearInterval(poller);\n            resolve({\n              statePath: urlResponse.statePath,\n              statePathPlaceholder: urlResponse.statePathPlaceholder,\n            });\n          }\n        });\n      }, pollInterval);\n\n      setTimeout(() => {\n        clearInterval(poller);\n        reject(\"Token acquisition timeout\");\n      }, timeout);\n    });\n\n    return {\n      poll,\n      callbackUrl: urlResponse.url,\n    };\n  }\n\n  async getGenericCallbackUrl(\n      key: string,\n      tokenAcquisitionPattern: RegExp,\n      keyAcquisitionPattern: RegExp,\n      options?: OAuth2CallbackUrlOptions\n  ): Promise<OAuth2StaticCallbackUrl> {\n    const timeout = options?.timeout ?? (300 * 1000); // 5 minute timeout\n    const pollInterval = options?.pollInterval ?? 1000; // 1 second poll interval\n\n    const urlResponse = await this.client.getStaticOAuth2CallbackUrl(\n        key,\n        tokenAcquisitionPattern.source,\n        keyAcquisitionPattern.source,\n        timeout,\n        options?.expires\n    );\n\n    const poll: OAuth2StaticCallbackUrlPoll = () => new Promise((resolve, reject) => {\n      const poller = setInterval(() => {\n        this.client.getStaticOAuth2Token(key).then((token) => {\n          if (token) {\n            clearInterval(poller);\n            resolve({ token });\n          }\n        });\n      }, pollInterval);\n\n      setTimeout(() => {\n        clearInterval(poller);\n        reject(\"Token acquisition timeout\");\n      }, timeout);\n    });\n\n    return {\n      poll,\n      callbackUrl: urlResponse.url,\n    };\n  }\n\n  async getAdminGenericCallbackUrl(\n      key: string,\n      tokenAcquisitionPattern: RegExp,\n      keyAcquisitionPattern: RegExp,\n      options?: OAuth2CallbackUrlOptions\n  ): Promise<OAuth2StaticCallbackUrl> {\n    const timeout = options?.timeout ?? (300 * 1000); // 5 minute timeout\n    const pollInterval = options?.pollInterval ?? 1000; // 1 second poll interval\n\n    const urlResponse = await this.client.getStaticOAuth2CallbackUrl(\n        key,\n        tokenAcquisitionPattern.source,\n        keyAcquisitionPattern.source,\n        timeout,\n        options?.expires\n    );\n\n    const poll: OAuth2StaticCallbackUrlPoll = () => new Promise((resolve, reject) => {\n      const poller = setInterval(() => {\n        this.client.getStaticOAuth2Token(key).then((token) => {\n          if (token) {\n            clearInterval(poller);\n            resolve({ token });\n          }\n        });\n      }, pollInterval);\n\n      setTimeout(() => {\n        clearInterval(poller);\n        reject(\"Token acquisition timeout\");\n      }, timeout);\n    });\n\n    return {\n      poll,\n      callbackUrl: urlResponse.url,\n    };\n  }\n}\n\nexport class DeskproClient implements IDeskproClient {\n\n  private parentMethods: ChildMethods = {\n    onReady: () => undefined,\n    onShow: () => undefined,\n    onChange: () => undefined,\n    onTargetAction: () => undefined,\n    onElementEvent: () => undefined,\n    onAdminSettingsChange: () => undefined,\n  };\n\n  // Core Methods\n  public getProxyAuth: () => Promise<ProxyAuthPayload>;\n  public getAdminGenericProxyAuth: () => Promise<ProxyAuthPayload>;\n  public resize: (height?: number) => void;\n  public setHeight: (height: number) => void;\n  public setWidth: (width: number | string) => void;\n  public registerElement: (id: string, element: AppElement) => void;\n  public deregisterElement: (id: string) => void;\n\n  // Sidebar Methods\n  public setBadgeCount: (count: number) => void;\n  public setTitle: (title: string) => void;\n\n  // EntityAssociation\n  public entityAssociationSet: (entityId: string, name: string, key: string, value?: string) => Promise<void>;\n  public entityAssociationDelete: (entityId: string, name: string, key: string) => Promise<void>;\n  public entityAssociationGet: (entityId: string, name: string, key: string) => Promise<string|null>;\n  public entityAssociationList: (entityId: string, name: string) => Promise<string[]>;\n  public entityAssociationCountEntities: (name: string, key: string) => Promise<number>;\n\n  // State\n  public setState: <T>(name: string, value: T, options?: StateOptions) => Promise<SetStateResponse>;\n  public setUserState: <T>(name: string, value: T, options?: UserStateOptions) => Promise<SetStateResponse>;\n  public getState: <T>(name: string) => Promise<GetStateResponse<T>[]>;\n  public getUserState: <T>(name: string) => Promise<GetStateResponse<T>[]>;\n  public deleteState: (name: string) => Promise<boolean>;\n  public deleteUserState: (name: string) => Promise<boolean>;\n  public hasState: (name: string) => Promise<boolean>;\n  public hasUserState: (name: string) => Promise<boolean>;\n\n  // Settings\n  public setSetting: <T>(name: string, value: T) => Promise<void>;\n  public setSettings: (settings: Record<string, any>) => Promise<void>;\n\n  // Blocking\n  public setBlocking: (blocking: boolean) => Promise<void>;\n\n  // Target Actions\n  public registerTargetAction: (name: string, type: TargetActionType, options?: TargetActionOptions) => Promise<void>;\n  public deregisterTargetAction: (name: string) => Promise<void>;\n\n  // OAuth2\n  public getOAuth2CallbackUrl: (name: string, tokenAcquisitionPattern: string, timeout: number) => Promise<GetOAuth2CallbackUrlResponse>;\n  public getStaticOAuth2CallbackUrl: (key: string, tokenAcquisitionPattern: string, keyAcquisitionPattern: string, timeout: number, expires?: Date) => Promise<GetStaticOAuth2CallbackUrlResponse>;\n  public getStaticOAuth2CallbackUrlValue: () => Promise<string>;\n  public getStaticOAuth2Token: (key: string) => Promise<string|null>;\n\n  // Admin\n  public setAdminSetting: (value: string) => void;\n  public setAdminSettingInvalid: (message: string, settingName?: string) => void;\n\n  // Deskpro UI\n  public sendDeskproUIMessage: (message: DeskproUIMessage) => Promise<void>;\n\n  constructor(\n    private readonly parent: <T extends object = CallSender>(options?: object) => Connection<T>,\n    private readonly options: DeskproClientOptions\n  ) {\n    this.getProxyAuth = () => new Promise<ProxyAuthPayload>(() => {});\n    this.getAdminGenericProxyAuth = () => new Promise<ProxyAuthPayload>(() => {});\n    this.resize = () => {};\n    this.setWidth = () => {};\n    this.setHeight = () => {};\n    this.registerElement = () => {};\n    this.deregisterElement = () => {};\n    this.setBadgeCount = () => {};\n    this.setTitle = () => {};\n\n    this.entityAssociationSet = async () => {};\n    this.entityAssociationDelete = async () => {};\n    this.entityAssociationGet = async () => null;\n    this.entityAssociationList = async () => [\"\"];\n    this.entityAssociationCountEntities = async () => 0;\n\n    this.setState = async () => ({ isSuccess: false, errors: [] });\n    this.setUserState = async () => ({ isSuccess: false, errors: [] });\n    this.getState = async () => [];\n    this.getUserState = async () => [];\n    this.deleteState = async () => false;\n    this.deleteUserState = async () => false;\n    this.hasState = async () => false;\n    this.hasUserState = async () => false;\n\n    this.setSetting = async () => {};\n    this.setSettings = async () => {};\n\n    this.setBlocking = async () => {};\n\n    this.registerTargetAction = async () => {};\n    this.deregisterTargetAction = async () => {};\n\n    this.getOAuth2CallbackUrl = async () => ({ url: \"\", statePath: \"\", statePathPlaceholder: \"\" });\n    this.getStaticOAuth2CallbackUrl = async () => ({ url: \"\" });\n    this.getStaticOAuth2CallbackUrlValue = async () => \"\";\n    this.getStaticOAuth2Token = async () => null;\n\n    this.setAdminSetting = async () => {};\n    this.setAdminSettingInvalid = async () => {};\n\n    this.sendDeskproUIMessage = async () => {};\n\n    if (this.options.runAfterPageLoad) {\n      window.addEventListener(\"load\", () => this.run());\n    }\n  }\n\n  public async run(): Promise<void> {\n    const parent = await this.parent<DeskproCallSender>({\n      methods: {\n        _onReady: this.parentMethods.onReady,\n        _onShow: this.parentMethods.onShow,\n        _onChange: this.parentMethods.onChange,\n        _onTargetAction: this.parentMethods.onTargetAction,\n        _onElementEvent: this.parentMethods.onElementEvent,\n        _onAdminSettingsChange: this.parentMethods.onAdminSettingsChange,\n      },\n    }).promise;\n\n    // Core\n    if (parent._getProxyAuth) {\n      this.getProxyAuth = parent._getProxyAuth;\n    }\n\n    if (parent._getAdminGenericProxyAuth) {\n      this.getAdminGenericProxyAuth = parent._getAdminGenericProxyAuth;\n    }\n\n    if (document && parent._setHeight) {\n      this.resize = (height?: number) => parent._setHeight(height ?? document.body.scrollHeight);\n    }\n\n    if (parent._registerElement) {\n      this.registerElement = (id: string, element: AppElement) => parent._registerElement(id, element);\n    }\n\n    if (parent._deregisterElement) {\n      this.deregisterElement = (id: string) => parent._deregisterElement(id);\n    }\n\n    if (parent._setWidth) {\n      this.setWidth = parent._setWidth;\n    }\n\n    if (parent._setHeight) {\n      this.setHeight = parent._setHeight;\n    }\n\n    // Common\n    if (parent.setBadgeCount) {\n      this.setBadgeCount = parent.setBadgeCount;\n    }\n\n    if (parent.setTitle) {\n      this.setTitle = parent.setTitle;\n    }\n\n    // Entity Association\n    if (parent._entityAssociationGet) {\n      this.entityAssociationGet = parent._entityAssociationGet;\n    }\n\n    if (parent._entityAssociationSet) {\n      this.entityAssociationSet = parent._entityAssociationSet;\n    }\n\n    if (parent._entityAssociationList) {\n      this.entityAssociationList = parent._entityAssociationList;\n    }\n\n    if (parent._entityAssociationDelete) {\n      this.entityAssociationDelete = parent._entityAssociationDelete;\n    }\n\n    if (parent._entityAssociationCountEntities) {\n      this.entityAssociationCountEntities = parent._entityAssociationCountEntities;\n    }\n\n    // State\n    if (parent._stateSet) {\n      this.setState = <T>(name: string, value: T, options?: StateOptions) => parent._stateSet(name, JSON.stringify(value), options);\n    }\n\n    if (parent._userStateSet) {\n      this.setUserState = <T>(name: string, value: T, options?: UserStateOptions) => parent._userStateSet(name, JSON.stringify(value), options);\n    }\n\n    if (parent._stateGet) {\n      this.getState = async <T>(name: string): Promise<T[]> => {\n        const res = JSON.parse(await parent._stateGet(name));\n        return (res ?? []).map((value: GetStateResponse<string>) => ({\n          ...value,\n          data: value.data ? JSON.parse(value.data) : null,\n        }));\n      };\n    }\n\n    if (parent._userStateGet) {\n      this.getUserState = async <T>(name: string): Promise<T[]> => {\n        const res = JSON.parse(await parent._userStateGet(name));\n        return (res ?? []).map((value: GetStateResponse<string>) => ({\n          ...value,\n          data: value.data ? JSON.parse(value.data) : null,\n        }));\n      };\n    }\n\n    if (parent._stateDelete) {\n      this.deleteState = parent._stateDelete;\n    }\n\n    if (parent._userStateDelete) {\n      this.deleteUserState = parent._userStateDelete;\n    }\n\n    if (parent._stateHas) {\n      this.hasState = parent._stateHas;\n    }\n\n    if (parent._userStateHas) {\n      this.hasUserState = parent._userStateHas;\n    }\n\n    // Settings\n    if (parent._settingSet) {\n      this.setSetting = <T>(name: string, value: T) => parent._settingSet(name, value);\n    }\n\n    if (parent._settingsSet) {\n      this.setSettings = (settings: Record<string, any>) => parent._settingsSet(JSON.stringify(settings));\n    }\n\n    // Blocking\n    if (parent._blockingSet) {\n      this.setBlocking = (blocking: boolean) => parent._blockingSet(blocking);\n    }\n\n    // Target Actions\n    if (parent._registerTargetAction) {\n      this.registerTargetAction = (name: string, type: TargetActionType, options?: TargetActionOptions) => parent._registerTargetAction(name, type, options);\n    }\n\n    if (parent._deregisterTargetAction) {\n      this.deregisterTargetAction = (name: string) => parent._deregisterTargetAction(name);\n    }\n\n    // OAuth2\n    if (parent._getOAuth2CallbackUrl) {\n      this.getOAuth2CallbackUrl = (name: string, tokenAcquisitionPattern: string, timeout: number, expires?: Date) => parent._getOAuth2CallbackUrl(name, tokenAcquisitionPattern, timeout, expires);\n    }\n\n    if (parent._getStaticOAuth2CallbackUrl) {\n      this.getStaticOAuth2CallbackUrl = (key: string, tokenAcquisitionPattern: string, keyAcquisitionPattern: string, timeout: number, expires?: Date) => parent._getStaticOAuth2CallbackUrl(key, tokenAcquisitionPattern, keyAcquisitionPattern, timeout, expires);\n    }\n\n    if (parent._getStaticOAuth2CallbackUrlValue) {\n      this.getStaticOAuth2CallbackUrlValue = () => parent._getStaticOAuth2CallbackUrlValue();\n    }\n\n    if (parent._getStaticOAuth2Token) {\n      this.getStaticOAuth2Token = (key: string) => parent._getStaticOAuth2Token(key);\n    }\n\n    // Admin\n    if (parent._setAdminSetting) {\n      this.setAdminSetting = (value) => parent._setAdminSetting(value);\n    }\n\n    if (parent._setAdminSettingInvalid) {\n      this.setAdminSettingInvalid = (message, settingName) => parent._setAdminSettingInvalid(message, settingName);\n    }\n\n    // Deskpro UI\n    if (parent._sendDeskproUIMessage) {\n      this.sendDeskproUIMessage = (message: DeskproUIMessage) => parent._sendDeskproUIMessage(message);\n    }\n  }\n\n  public onReady(cb: ChildMethod): void {\n    this.parentMethods.onReady = (context: Context) => {\n      cb(context);\n      if (this.resize && this.options.resizeAfterEvents) {\n        this.resize();\n      }\n    };\n  }\n\n  public onShow(cb: ChildMethod): void {\n    this.parentMethods.onShow = (context: Context) => {\n      cb(context);\n      if (this.resize && this.options.resizeAfterEvents) {\n        this.resize();\n      }\n    };\n  }\n\n  public onChange(cb: ChildMethod): void {\n    this.parentMethods.onChange = (context: Context) => {\n      cb(context);\n      if (this.resize && this.options.resizeAfterEvents) {\n        this.resize();\n      }\n    };\n  }\n\n  public onTargetAction(cb: TargetActionChildMethod): void {\n    this.parentMethods.onTargetAction = <Payload>(action: TargetAction<Payload>) => {\n      cb(action);\n      if (this.resize && this.options.resizeAfterEvents) {\n        this.resize();\n      }\n    };\n  }\n\n  public onElementEvent(cb: ElementEventChildMethod): void {\n    this.parentMethods.onElementEvent = <Payload>(id: string, type: string, payload: Payload) => {\n      cb(id, type, payload);\n      if (this.resize && this.options.resizeAfterEvents) {\n        this.resize();\n      }\n    };\n  }\n\n  public onAdminSettingsChange(cb: (settings: Record<string, any>) => void): void {\n    this.parentMethods.onAdminSettingsChange = (settings: Record<string, any>) => {\n      cb(settings);\n    };\n  }\n\n  public getEntityAssociation(name: string, entityId: string): IEntityAssociation {\n    return new EntityAssociation(this, name, entityId);\n  }\n\n  public oauth2(): IOAuth2 {\n    return new OAuth2(this);\n  }\n\n  public deskpro(): IDeskproUI {\n    return new DeskproUI(this);\n  }\n\n  public getParentMethods(): ChildMethods {\n    return this.parentMethods;\n  }\n}\n\nexport const createClient = (options: DeskproClientOptions = {}): IDeskproClient => new DeskproClient(connectToParent, options);\n","import { createContext } from \"react\";\nimport { DeskproAppContextValue } from \"./types\";\n\nexport const DeskproAppContext = createContext<DeskproAppContextValue>(null);\n","import React, { FC, useEffect, useState } from \"react\";\nimport { DeskproAppEventType, DeskproAppProviderProps } from \"./types\";\nimport { GlobalStyles, lightTheme } from \"../theme\";\nimport { createClient } from \"../../client/client\";\nimport { Context, IDeskproClient, TargetAction, TargetElementEvent } from \"../../client/types\";\nimport { DeskproAppContext } from \"./context\";\nimport { ThemeProvider } from \"@deskpro/deskpro-ui\";\n\nexport const DeskproAppProvider: FC<DeskproAppProviderProps> = ({ children, theme, debug }: DeskproAppProviderProps) => {\n  const [client, setClient] = useState<IDeskproClient|null>(null);\n  const [context, setContext] = useState<Context|null>(null);\n  const [registeredElements, setRegisteredElements] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (client) {\n      return;\n    }\n\n    const dpClient = createClient({\n      runAfterPageLoad: false,\n      resizeAfterEvents: false,\n    });\n\n    dpClient.onReady((context: Context) => {\n      setContext(context);\n      document.dispatchEvent(\n        new CustomEvent<Context>(DeskproAppEventType.READY, { detail: context })\n      );\n    });\n\n    dpClient.onShow((context: Context) => {\n      setContext(context);\n      document.dispatchEvent(\n        new CustomEvent<Context>(DeskproAppEventType.SHOW, { detail: context })\n      );\n    });\n\n    dpClient.onChange((context: Context) => {\n      setContext(context);\n      document.dispatchEvent(\n        new CustomEvent<Context>(DeskproAppEventType.CHANGE, { detail: context })\n      );\n    });\n\n    dpClient.onTargetAction((action: TargetAction) => {\n      setContext(action.context);\n      document.dispatchEvent(\n        new CustomEvent<TargetAction>(DeskproAppEventType.TARGET_ACTION, { detail: action })\n      );\n    });\n\n    dpClient.onElementEvent((id, type, payload) => {\n      document.dispatchEvent(\n        new CustomEvent<TargetElementEvent>(DeskproAppEventType.TARGET_ELEMENT_EVENT, { detail: {id, type, payload} as TargetElementEvent })\n      );\n    });\n\n    dpClient.onAdminSettingsChange((settings) => {\n      setContext({ type: \"admin_settings\", settings }); // Pass more admin context here if we ever have one\n      document.dispatchEvent(\n          new CustomEvent<Record<string, any>>(DeskproAppEventType.ADMIN_SETTINGS_CHANGE, { detail: settings })\n      );\n    });\n\n    dpClient.run().then(() => setClient(dpClient));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (debug) {\n    console.debug(\n        client\n            ? \"Deskpro apps client is ready\"\n            : \"Deskpro apps client is initialising...\"\n    );\n  }\n\n  const currentTheme = theme ?? lightTheme;\n\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <GlobalStyles />\n      <DeskproAppContext.Provider value={{ client, context, registeredElements, setRegisteredElements, theme: currentTheme }}>\n        {children}\n      </DeskproAppContext.Provider>\n    </ThemeProvider>\n  );\n};\n"],"names":["ThemeProvider","props","React.createElement","ThemeContext","DeskproAppEventType","MessageType","Resolution","ErrorCode","NativeErrorName","NativeEventType","createDestructor","localName","log","callbacks","destroyed","error","callback","createLogger","debug","args","serializeError","name","message","stack","deserializeError","obj","deserializedError","key","connectCallReceiver","info","serializedMethods","local","remote","originForSending","originForReceiving","handleMessageEvent","event","callMessage","methodName","id","createPromiseHandler","resolution","returnValue","err","errorReplyMessage","resolve","generateId","KEY_PATH_DELIMITER","keyPathToSegments","keyPath","segmentsToKeyPath","segments","createKeyPath","prefix","setAtKeyPath","subject","value","prevSubject","idx","serializeMethods","methods","flattenedMethods","deserializeMethods","connectCallSender","callSender","methodKeyPaths","destroyConnection","createMethodProxy","iframeRemoved","reject","replyMessage","api","startConnectionTimeout","timeout","timeoutId","handleSynAckMessageFactory","parentOrigin","destructor","destroy","onDestroy","ackMessage","destroyCallReceiver","destroyCallSender","areGlobalsAccessible","connectToParent","options","handleSynAckMessage","sendSynMessage","synMessage","parentOriginForSyn","stopConnectionTimeout","handleMessage","DeskproUI","client","content","url","text","title","EntityAssociation","entityId","OAuth2","tokenAcquisitionPattern","pollInterval","urlResponse","poller","has","keyAcquisitionPattern","token","DeskproClient","parent","__publicField","height","element","settings","blocking","type","expires","settingName","cb","context","action","payload","createClient","DeskproAppContext","createContext","DeskproAppProvider","children","theme","setClient","useState","setContext","registeredElements","setRegisteredElements","useEffect","dpClient","context2","currentTheme","lightTheme","jsxs","jsx","GlobalStyles"],"mappings":"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","x_google_ignoreList":[0,2,3,4,5,6,7,8,9,10,11,12]}