import{j as c}from"./jsx-runtime-2aae9559.js";import{r as t}from"./index-ff614419.js";import{d as u}from"./SPA-1143c1d3.js";const n=u.div`
  height: 3px;
  width: 100%;
`;try{n.displayName="Observed",n.__docgenInfo={description:"",displayName:"Observed",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"void | WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"void | WebTarget"}}}}}catch{}function a({onIntersect:e}){const r=t.useRef(null),s=t.useRef(e);return t.useLayoutEffect(()=>{s.current=e},[e]),t.useLayoutEffect(()=>{if(!r.current)return;const o=new IntersectionObserver(i=>{i.some(d=>d.isIntersecting)&&s.current()});return o.observe(r.current),()=>o.disconnect()},[]),c.jsx(n,{"data-testid":"observer",ref:r})}try{a.displayName="ObservedDiv",a.__docgenInfo={description:"Component that positions absolutely to the top or bottom of the container\nand emits an event if it intersects with the view port using `IntersectionObserver`",displayName:"ObservedDiv",props:{onIntersect:{defaultValue:null,description:"Handler for when the component intersects with the viewport",name:"onIntersect",required:!0,type:{name:"() => void"}}}}}catch{}export{a as O};
