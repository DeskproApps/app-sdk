{"version":3,"file":"Select-af3a5ee9.js","sources":["../../../src/ui/components/Select/constants.ts","../../../src/ui/components/Select/utils.ts","../../../src/ui/components/Select/Select.tsx"],"sourcesContent":["export const NO_FOUND = \"No items(s) found\";\n","import { NO_FOUND } from \"./constants\";\nimport type { DropdownItemType, DropdownValueType } from \"@deskpro/deskpro-ui\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isString = (value: any): value is string => {\n  return typeof value === \"string\";\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isNumber = (value: any): value is number => {\n  return typeof value === \"number\" && !isNaN(value);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isPrimitive = (value: any): value is string|number => {\n  return isString(value) || isNumber(value);\n}\n\nconst getDisplayValue = <T,>(value: T|T[], options: Array<DropdownValueType<T>>) => {\n  if (!Array.isArray(options) || !options.length) {\n    return \"\";\n  }\n\n  if (!isNumber(value) && !isString(value) && !Array.isArray(value)) {\n    return \"\";\n  }\n\n  if (Array.isArray(value)) {\n    const filteredOptions = options\n      .filter((o) => value.includes(o.value))\n      .map((o) => o.label);\n\n    if (!value.length) {\n      return \"\";\n    }\n\n    if (isPrimitive(filteredOptions[0])) {\n      return filteredOptions.join(\", \");\n    }\n\n    return filteredOptions;\n  } else {\n    const o = options.find((o) => o.value === value);\n    return o?.label ?? \"\";\n  }\n};\n\nconst getFilteredOptions = <T,>(\n  options: Array<DropdownValueType<T>>,\n  value: T|T[],\n  input?: string,\n  noFoundText?: string,\n): Array<DropdownItemType<T>> => {\n  const searchInput: string = input || \"\";\n  const noFound = noFoundText || NO_FOUND;\n\n  if (!Array.isArray(options) || !options.length) {\n    return [{ type: \"header\", label: noFound }];\n  }\n\n  const filteredOptions = options\n    .filter((o) => {\n      const label = o?.label;\n      const description = o?.description;\n      const search = isPrimitive(label) ? `${label}` : description || \"\";\n\n      return !search\n        ? true\n        : (isString(search) ? search.toLowerCase() : search).includes(searchInput.toLowerCase());\n    })\n    .map((o) => ({\n      ...o,\n      selected: Array.isArray(value)\n        ? value.includes(o.value)\n        : o.value === value,\n    }));\n\n  if (!Array.isArray(filteredOptions) || !filteredOptions.length) {\n    return [{ type: \"header\", label: noFound }];\n  } else {\n    return filteredOptions;\n  }\n};\n\nexport { getDisplayValue, getFilteredOptions, isPrimitive };\n","import { useState, useMemo, ReactNode } from \"react\";\nimport { faCheck, faCaretDown, faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Stack, DivAsInput, Dropdown } from \"@deskpro/deskpro-ui\";\nimport { isPrimitive, getDisplayValue, getFilteredOptions } from \"./utils\";\nimport { NO_FOUND } from \"./constants\";\nimport type {\n  AnyIcon,\n  DropdownProps,\n  DropdownValueType,\n  DropdownTargetProps,\n  DivAsInputWithDisplayProps,\n} from \"@deskpro/deskpro-ui\";\n\ntype Props<T> = Pick<\n  DropdownProps<T, HTMLElement>,\n  \"closeOnSelect\" | \"containerHeight\" | \"containerMaxHeight\" | \"placement\" | \"disabled\"\n> & {\n  initValue: T | T[];\n  id?: string;\n  error?: DivAsInputWithDisplayProps[\"error\"];\n  options: Array<DropdownValueType<T>>;\n  onChange?: (value: T | T[]) => void;\n  placeholder?: DivAsInputWithDisplayProps[\"placeholder\"];\n  showInternalSearch?: boolean;\n  noFoundText?: string;\n  children?: ReactNode;\n};\n\nconst Select = <T,>({\n  id,\n  error,\n  initValue,\n  options,\n  onChange,\n  disabled,\n  placeholder,\n  showInternalSearch,\n  noFoundText = NO_FOUND,\n  children,\n  ...props\n}: Props<T>) => {\n  const [input, setInput] = useState<string>(\"\");\n  const [selected, setSelected] = useState(initValue);\n\n  const displayValue = useMemo(() => getDisplayValue(selected, options), [selected, options]);\n\n  const currentOptions = useMemo(() => {\n    return getFilteredOptions(options, selected, input, noFoundText);\n  }, [options, selected, input, noFoundText]);\n\n  return (\n    <Dropdown\n      disabled={disabled}\n      showInternalSearch={showInternalSearch}\n      fetchMoreText={\"Fetch more\"}\n      autoscrollText={\"Autoscroll\"}\n      selectedIcon={faCheck as AnyIcon}\n      externalLinkIcon={faExternalLinkAlt as AnyIcon}\n      placement=\"bottom-start\"\n      hideIcons\n      inputValue={input}\n      onSelectOption={(selectedOption) => {\n        setInput(\"\");\n\n        if (isPrimitive(selected)) {\n          setSelected(selectedOption.value);\n          onChange && onChange(selectedOption.value);\n        } else if (Array.isArray(selected)) {\n          const newValue = selected.includes(selectedOption.value)\n            ? selected.filter((v) => v !== selectedOption.value)\n            : [...selected, selectedOption.value];\n\n          setSelected(newValue);\n          onChange && onChange(newValue);\n        }\n      }}\n      onInputChange={(value) => {\n        if (showInternalSearch) {\n          setInput(value);\n        }\n      }}\n      options={currentOptions}\n      {...props}\n    >\n      {({ targetRef, targetProps }: DropdownTargetProps<HTMLDivElement>) =>\n        children ? (\n          <div ref={targetRef} {...targetProps}>\n            {children}\n          </div>\n        ) : (\n          <DivAsInput\n            {...(!id ? {} : { id: id })}\n            placeholder={placeholder || \"Select Value\"}\n            variant=\"inline\"\n            rightIcon={faCaretDown as AnyIcon}\n            error={error}\n            ref={targetRef}\n            {...targetProps}\n            value={\n              !Array.isArray(displayValue) ? (\n                displayValue\n              ) : isPrimitive(displayValue[0]) ? (\n                displayValue[0]\n              ) : (\n                <Stack gap={6} wrap=\"wrap\" style={{ marginBottom: 6 }}>\n                  {displayValue}\n                </Stack>\n              )\n            }\n            style={{ paddingRight: 0, cursor: !disabled ? \"pointer\" : \"not-allowed\" }}\n          />\n        )\n      }\n    </Dropdown>\n  );\n};\n\nexport { Select };\n"],"names":["NO_FOUND","isString","value","isNumber","isPrimitive","getDisplayValue","options","filteredOptions","o","getFilteredOptions","input","noFoundText","searchInput","noFound","label","description","search","Select","id","error","initValue","onChange","disabled","placeholder","showInternalSearch","children","props","setInput","useState","selected","setSelected","displayValue","useMemo","currentOptions","jsx","Dropdown","faCheck","faExternalLinkAlt","selectedOption","newValue","v","targetRef","targetProps","DivAsInput","faCaretDown","Stack"],"mappings":"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"}