{"version":3,"file":"PropertyRow-f1137ebf.js","sources":["../../../src/ui/components/Property/PropertyRow.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport type { FC, PropsWithChildren } from \"react\";\n\nexport type Props = PropsWithChildren<{\n  marginBottom?: number,\n}>;\n\ntype RowProps = Pick<Props, \"marginBottom\"> & {\n  count: number,\n};\n\nconst Row = styled.div<RowProps>`\n  display: grid;\n  grid-template-columns: repeat(${({ count }) => count}, ${({ count }) => 100/count}%);\n  width: 100%;\n`;\n\nconst ItemContainer = styled.div`\n  padding: 0 6px;\n\n  &:not(:first-child) {\n    border-left: 1px solid ${({ theme }) => theme.colors.grey20};\n  }\n`;\n\nconst Item = styled.div`\n  overflow: hidden;\n  white-space: pre-wrap;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n`;\n\nexport const PropertyRow: FC<Props> = ({\n  children,\n  marginBottom = 10,\n}) => {\n  return (!Array.isArray(children))\n    ? (<>{children}</>)\n    : (\n      <Row count={children.length} marginBottom={marginBottom}>\n        {children.map((child, idx) => (\n          <ItemContainer key={idx}>\n            <Item>{child}</Item>\n          </ItemContainer>\n        ))}\n      </Row>\n    );\n};\n"],"names":["Row","styled","count","ItemContainer","theme","Item","PropertyRow","children","marginBottom","jsx","child","idx","Fragment"],"mappings":"2FAWA,MAAAA,EAAAC,EAAA;AAAA;AAAA,kCAAmB,CAAA,CAAA,MAAAC,CAAA,IAAAA,CAAA,KAAA,CAAA,CAAA,MAAAA,CAAA,IAAA,IAAAA,CAAA;AAAA;AAAA,EAMnBC,EAAAF,EAAA;AAAA;AAAA;AAAA;AAAA,6BAA6B,CAAA,CAAA,MAAAG,CAAA,IAAAA,EAAA,OAAA,MAAA;AAAA;AAAA,EAQ7BC,EAAAJ,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOOK,EAAA,CAAA,CAAgC,SAAAC,EACrC,aAAAC,EAAA,EAEF,IACE,MAAA,QAAAD,CAAA,EAAAE,EAAAT,EAAA,CAAA,MAAAO,EAAA,OAAA,aAAAC,EAAA,SAAAD,EAAA,IAAA,CAAAG,EAAAC,IAAAF,EAAAN,EAAA,CAAA,SAAAM,EAAAJ,EAAA,CAAA,SAAAK,CAAA,CAAA,CAAA,EAAAC,CAAA,CAAA,CAAA,CAAA,EAAAF,EAAAG,EAAA,CAAA,SAAAL,CAAA,CAAA"}