name: PR Build

on:
  pull_request:
    branches:
      - master

jobs:
  deskpro_ui:
    name: Test / Build
    timeout-minutes: 30
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      - name: Install rimraf
        run: pnpm i -g rimraf

      - name: Build package
        run: pnpm run build

      - name: Lint
        run: pnpm run lint

      - name: Type check
        run: pnpm exec tsc -b

      - name: Run tests
        run: pnpm run test

      - name: Build Storybook
        run: pnpm run build:storybook

      - name: Deploy Storybook
        id: chromauideployment
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir: build-storybook
          exitOnceUploaded: true

      - name: Extract Storybook URL
        id: extract_url
        run: |
          echo ${{toJson(steps.chromauideployment.outputs)}} 
          url_regex='View your Storybook at (https://.*\.chromatic\.com)'
          if [[ ${{ steps.chromauideployment.outputs.response  }} =~ $url_regex ]]; then
            echo "::set-output name=url::${BASH_REMATCH[1]}"
          fi

      - name: Leave comment with URL
        uses: peter-evans/create-or-update-comment@v2
        with:
          body: |
          Storybook build URL: ${{steps.extract_url.outputs.url}}
