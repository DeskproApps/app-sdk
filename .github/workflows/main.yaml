name: CI/CD

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  release:
    if: github.event.pull_request.merged == true
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      - name: Build package
        run: pnpm run build

      - name: Get labels from pull request
        id: labels
        run: echo "milestone=$(jq --raw-output '.pull_request.labels[].name' $GITHUB_EVENT_PATH | grep -E 'major-version|minor-version' | head -1)" >> $GITHUB_OUTPUT

      - name: Bump Version
        run: |
          git config --global user.name "git log -1 --pretty=format:%an"
          git config --global user.email "$(git log -1 --pretty=format:%ae)"

          if [ "$(git log -1 --pretty=format:%ae)" = "noreply@github.com" ]; then
            echo "Skipping workflow run because previous commit was not made by workflow."
            exit 0
          fi

          if [[ "${{ steps.labels.outputs.milestone }}" == "major-version" ]]; then
            pnpm version major
          elif [[ "${{ steps.labels.outputs.milestone }}" == "minor-version" ]]; then
            pnpm version minor
          else
            pnpm version patch
          fi

          pnpm run docs:storybook

          git add docs/*

          git commit -m "Updated Storybook"

          git push origin main

      - name: Authenticate Registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: pnpm config set //registry.npmjs.org/:_authToken $NODE_AUTH_TOKEN

      - name: Publish to Registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: pnpm publish
