name: CI/CD

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  release:
    if: github.event.pull_request.merged == true
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      - name: Install rimraf
        run: pnpm i -g rimraf

      - name: Build package
        run: pnpm run build

      - name: Build storybook
        run: pnpm run build:storybook

      - name: Get labels from pull request
        id: labels
        run: echo "::set-output name=milestone::$(jq --raw-output '.pull_request.labels[].name' $GITHUB_EVENT_PATH | grep -E 'major-version|minor-version' | head -1)"

      - name: Bump Version
        run: |
          git config --global user.name "git log -1 --pretty=format:%an"
          git config --global user.email "$(git log -1 --pretty=format:%ae)"

          if [ "$(git log -1 --pretty=format:%ae)" = "noreply@github.com" ]; then
            echo "Skipping workflow run because previous commit was not made by workflow."
            exit 0
          fi

          if [[ "${{ steps.labels.outputs.milestone }}" == "major-version" ]]; then
            npm version major
          elif [[ "${{ steps.labels.outputs.milestone }}" == "minor-version" ]]; then
            npm version minor
          else
            npm version patch
          fi

          pnpm run build

          pnpm run build:storybook

          git add docs/*

          git commit -m "Updated Storybook"

          git push origin master

      - name: Authenticate NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" > .npmrc

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: npm publish

      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir: build-storybook
          exitOnceUploaded: true
